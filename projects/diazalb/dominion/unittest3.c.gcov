        -:    0:Source:unittest3.c
        -:    0:Graph:unittest3.gcno
        -:    0:Data:unittest3.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:
        -:    8:#define TESTUNIT "isGameOver()"
        -:    9:
        -:   10:int failCount = 0;
        -:   11:
        3:   12:void testCheck(int a, int b) {
        3:   13:	if (a == b) {
        3:   14:		printf("PASSED\n");
        -:   15:	}
        -:   16:	else {
    #####:   17:		printf("FAILED\n");
    #####:   18:		failCount++;
        -:   19:	}
        3:   20:}
        -:   21:
        -:   22:
        1:   23:int main () {
        -:   24:    int i, b;
        -:   25:	int handCount;
        1:   26:    int numPlayers = 2;
        1:   27:    int seed = 1000;
        1:   28:    int bonus = 1;
        -:   29:
        -:   30:
        -:   31:	struct gameState G;
        -:   32:	
        -:   33:	// kingdom cards
        1:   34:    int k[10] = {adventurer, council_room, feast, gardens, mine, remodel, smithy, 
        -:   35:				village, baron, great_hall};
        -:   36:			
        -:   37:
        1:   38:	printf("\n\n");
        1:   39:	printf("---------------- Unit Test 3 ----------------\n\n");
        -:   40:
        1:   41:	printf("-------------- Testing : %s ----------------\n", TESTUNIT);
        -:   42:
        1:   43:    memset(&G,23,sizeof(struct gameState));
        1:   44:    initializeGame(numPlayers, k, seed, &G);
        -:   45:
        -:   46:	//TEST Province Cards and Supply Piles Not Empty
        1:   47:	printf("\nTEST Supply & Province Piles are not empty: ");
        1:   48:    testCheck(isGameOver(&G),0);
        -:   49:	
        1:   50:	printf("\nTEST Province cards are empty: ");
        1:   51:    G.supplyCount[province] = 0;
        1:   52:    testCheck(isGameOver(&G),1);
        1:   53:    G.supplyCount[province] = 1;
        -:   54:
        1:   55:	printf("\nTEST Three supply piles are empty: ");
        1:   56:    G.supplyCount[0] = 0;
        1:   57:    G.supplyCount[1] = 0;
        1:   58:    G.supplyCount[2] = 0;
        1:   59:    testCheck(isGameOver(&G),1);
        -:   60:
        -:   61:
        -:   62:	//DISPLAY TEST FINAL TEST RESULTS
        1:   63:	if (failCount) {
    #####:   64:		printf("\nTEST FAILED\n");
    #####:   65:		printf("Number of Fails: %d\n", failCount);
        -:   66:	}
        -:   67:	else {
        1:   68:		printf("\n100% COMPLETED TEST SUCCESSFULLY\n\n");
        -:   69:	}
        -:   70:
        1:   71:    return 0;
        -:   72:}
